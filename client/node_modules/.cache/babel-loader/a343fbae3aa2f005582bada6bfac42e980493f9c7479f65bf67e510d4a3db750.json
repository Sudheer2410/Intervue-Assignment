{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\home\\\\Desktop\\\\SDE-Assignment\\\\client\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [userName, setUserName] = useState(null);\n  useEffect(() => {\n    // Connect to the backend server\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000');\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setIsConnected(false);\n    });\n    newSocket.on('error', error => {\n      console.error('Socket error:', error);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Auto-join as teacher when socket connects\n  useEffect(() => {\n    if (socket && socket.connected && userRole === 'teacher') {\n      console.log('SocketContext: Auto-joining as teacher');\n      socket.emit('join-teacher');\n    }\n  }, [socket, socket === null || socket === void 0 ? void 0 : socket.connected, userRole]);\n  const joinAsStudent = name => {\n    if (socket) {\n      socket.emit('join-student', {\n        name\n      });\n      setUserRole('student');\n      setUserName(name);\n    }\n  };\n  const joinAsTeacher = () => {\n    if (socket) {\n      console.log('SocketContext: Joining as teacher');\n      socket.emit('join-teacher');\n      setUserRole('teacher');\n      setUserName('Teacher');\n    }\n  };\n  const createPoll = pollData => {\n    if (socket) {\n      console.log('SocketContext: Creating poll with data:', pollData);\n      socket.emit('new-question', pollData);\n    }\n  };\n  const submitAnswer = (questionId, selectedOption) => {\n    if (socket) {\n      socket.emit('student-answer', {\n        questionId,\n        selectedOption\n      });\n    }\n  };\n  const kickStudent = studentId => {\n    if (socket) {\n      socket.emit('kick-student', studentId);\n    }\n  };\n  const endPoll = () => {\n    if (socket) {\n      socket.emit('end-poll');\n    }\n  };\n  const value = {\n    socket,\n    isConnected,\n    userRole,\n    userName,\n    joinAsStudent,\n    joinAsTeacher,\n    createPoll,\n    submitAnswer,\n    kickStudent,\n    endPoll\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"jYvSO/v0jZT/y0hGPqzaySEvn+s=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","isConnected","setIsConnected","userRole","setUserRole","userName","setUserName","newSocket","process","env","REACT_APP_SERVER_URL","on","console","log","error","close","connected","emit","joinAsStudent","name","joinAsTeacher","createPoll","pollData","submitAnswer","questionId","selectedOption","kickStudent","studentId","endPoll","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/home/Desktop/SDE-Assignment/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [userName, setUserName] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Connect to the backend server\r\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000');\r\n    \r\n    newSocket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setIsConnected(true);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('error', (error) => {\r\n      console.error('Socket error:', error);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Auto-join as teacher when socket connects\r\n  useEffect(() => {\r\n    if (socket && socket.connected && userRole === 'teacher') {\r\n      console.log('SocketContext: Auto-joining as teacher');\r\n      socket.emit('join-teacher');\r\n    }\r\n  }, [socket, socket?.connected, userRole]);\r\n\r\n  const joinAsStudent = (name) => {\r\n    if (socket) {\r\n      socket.emit('join-student', { name });\r\n      setUserRole('student');\r\n      setUserName(name);\r\n    }\r\n  };\r\n\r\n  const joinAsTeacher = () => {\r\n    if (socket) {\r\n      console.log('SocketContext: Joining as teacher');\r\n      socket.emit('join-teacher');\r\n      setUserRole('teacher');\r\n      setUserName('Teacher');\r\n    }\r\n  };\r\n\r\n  const createPoll = (pollData) => {\r\n    if (socket) {\r\n      console.log('SocketContext: Creating poll with data:', pollData);\r\n      socket.emit('new-question', pollData);\r\n    }\r\n  };\r\n\r\n  const submitAnswer = (questionId, selectedOption) => {\r\n    if (socket) {\r\n      socket.emit('student-answer', { questionId, selectedOption });\r\n    }\r\n  };\r\n\r\n  const kickStudent = (studentId) => {\r\n    if (socket) {\r\n      socket.emit('kick-student', studentId);\r\n    }\r\n  };\r\n\r\n  const endPoll = () => {\r\n    if (socket) {\r\n      socket.emit('end-poll');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    socket,\r\n    isConnected,\r\n    userRole,\r\n    userName,\r\n    joinAsStudent,\r\n    joinAsTeacher,\r\n    createPoll,\r\n    submitAnswer,\r\n    kickStudent,\r\n    endPoll,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}